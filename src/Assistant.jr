class Assistant
{
  public Assistant()
  {
    send main_loop(Pub.getInstance());
  }
  
  public op void last_cleaning();
  
  private op void main_loop(Pub pub)
  {
    Logger.log("Assistant: “Good morning, boss!”");
    pub.hello();
    
    pub.clock().setAlarm(wakeup, new MyTime(0));
    
    while(true)
    {
      inni void last_cleaning()
      {
        Logger.log("Assistant: “I'll get right to it, boss!”");
        clean(pub);
        Logger.log("Assistant: “Everything is clean now, I go home now.”");
        pub.goodbye();
        break;
      }
      [] void wakeup()
      {
        clean(pub);
      }
      pub.clock().setAlarm(wakeup, new MyTime(15 * 60)); // Workers' union requirement
    }
  }
  
  private void clean() {
    List drinks = new ArrayList();
    for(i=0;i<pub.TABLES;i++){
      pub.get_table(i).takeAll();
    }
    // Wash
    int glasses, cups = 0;
    for(Drink drink : drinks){
      if (drink.container() instanceof Glass){
        glasses++;
        send Bardisk.glass();
      } else if {
        cups++;
        send Bardisk.cup();
      }
    }
    Logger.log("Assistant: “I've cleaned "+glasses+" glasses and "+cups+" cups.”");
  }
  
  
  
  public String toString()
  { return "Assistant"; }
}
